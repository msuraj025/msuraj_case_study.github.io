{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/question-class.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".label-font{\\r\\n    color: #116a65;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <br>\\r\\n  <h3 style=\\\"text-align:center; color: blueviolet\\\">\\r\\n    Welcome to Quiz Application\\r\\n  </h3>\\r\\n  <br>\\r\\n  <!-- <h1 style=\\\"text-align:center\\\", style=\\\"color:  blueviolet;\\\">\\r\\n    Welcome to Quiz Application;\\r\\n  </h1> -->\\r\\n  <div class=\\\"card\\\" [hidden]=\\\"isQuestionCardShow\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <h5 class=\\\"card-title\\\" style=\\\"text-align:center; color:  rgb(226, 43, 171);\\\">Choose Option </h5>\\r\\n      <!-- <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> -->\\r\\n      <div class=\\\"row justify-content-md-center\\\">\\r\\n        <div class=\\\"col-sm-12 col-lg-3\\\">\\r\\n          <button class=\\\"btn btn-block btn-outline-primary cursor-restriction\\\" (click)=\\\"addQuestion()\\\" style=\\\"margin-top: 24px; color: darkgoldenrod ;\\\">\\r\\n            Add Questions </button>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 col-lg-3\\\">\\r\\n          <button class=\\\"btn btn-block btn-outline-primary cursor-restriction\\\" style=\\\"margin-top: 24px; color: darkred;\\\" (click)=\\\"startQuiz()\\\">\\r\\n            Start Quiz </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\" [hidden]=\\\"!isQuestionCardShow\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form #questionTest=\\\"ngForm\\\" novalidate>\\r\\n        <div *ngFor=\\\"let ques of allQuestions\\\">\\r\\n          <div>{{ques.question}}</div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-md-3 col-form-label\\\">Choose Correct Option</label>\\r\\n            <div class=\\\"col-md-9 col-form-label\\\">\\r\\n              <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"a\\\" [(ngModel)]=\\\"ques.selected\\\">\\r\\n                <label class=\\\"form-check-label\\\"> {{ques.a}} </label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"b\\\" [(ngModel)]=\\\"ques.selected\\\">\\r\\n                <label class=\\\"form-check-label\\\">{{ques.b}}</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"c\\\" [(ngModel)]=\\\"ques.selected\\\">\\r\\n                <label class=\\\"form-check-label\\\">{{ques.c}}</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"d\\\" [(ngModel)]=\\\"ques.selected\\\">\\r\\n                <label class=\\\"form-check-label\\\">{{ques.d}}</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"e\\\" [(ngModel)]=\\\"ques.selected\\\">\\r\\n                <label class=\\\"form-check-label\\\">{{ques.e}}</label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\" style=\\\"justify-content: center;display: flex;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"HomePage()\\\" style=\\\"margin-right: 30px;\\\">Cancel</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitTest()\\\">Submit</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div bsModal #submitModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\" style=\\\"color: #196f77;\\\">\\r\\n        <h4>Total Questions: {{allQuestions.length}} </h4>\\r\\n        <h4>\\r\\n          Total Answered: {{totalAnswered}}\\r\\n        </h4>\\r\\n        <h4>\\r\\n          Right Answer : {{rightAnswer}}\\r\\n        </h4>\\r\\n        <span>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"checkAnswers()\\\" style=\\\"margin-right: 17px;\\\"> Answers</button>\\r\\n        </span>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"submitModal.hide()\\\" style=\\\"margin-left: 17px;\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\\r\\n<div bsModal #addQuestionModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\" style=\\\"color: #196f77;\\\">\\r\\n        <form #questionForm=\\\"ngForm\\\"  novalidate>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-12 col-lg-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"question\\\" class=\\\"label-font\\\"> Add Question</label>\\r\\n                <span style=\\\"color:red;\\\" [hidden]=\\\"!(question?.invalid)\\\">*</span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"question\\\" placeholder=\\\"Enter Question\\\" [(ngModel)]=\\\"questionObj.question\\\" [ngClass]=\\\"{\\r\\n                      'is-invalid': question?.invalid && (question?.dirty ||question?.touched),\\r\\n                      'is-valid': question?.valid && (question?.dirty || question?.touched)\\r\\n                 }\\\" #question=\\\"ngModel\\\" required>\\r\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"question.errors && (question.dirty || question.touched)\\\">\\r\\n                  <p *ngIf=\\\"question.errors.required\\\">Question Description is required</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-12 col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"a\\\">Option a.</label>\\r\\n                <span style=\\\"color:red;\\\" [hidden]=\\\"!(a?.invalid)\\\">*</span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"a\\\" placeholder=\\\"Enter First Option\\\" [(ngModel)]=\\\"questionObj.a\\\" [ngClass]=\\\"{\\r\\n                              'is-invalid': a?.invalid && (a?.dirty ||a?.touched),\\r\\n                              'is-valid': a?.valid && (a?.dirty || a?.touched)\\r\\n                         }\\\" #a=\\\"ngModel\\\" required>\\r\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"a.errors && (a.dirty || a.touched)\\\">\\r\\n                  <p *ngIf=\\\"a.errors.required\\\">Option is required</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-12 col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"b\\\">Option b.</label>\\r\\n                <span style=\\\"color:red;\\\" [hidden]=\\\"!(b?.invalid)\\\">*</span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"b\\\" placeholder=\\\"Enter Second Option\\\" [(ngModel)]=\\\"questionObj.b\\\" [ngClass]=\\\"{\\r\\n                          'is-invalid': b?.invalid && (b?.dirty ||b?.touched),\\r\\n                          'is-valid': b?.valid && (b?.dirty || b?.touched)\\r\\n                     }\\\" #b=\\\"ngModel\\\" required>\\r\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"b.errors && (b.dirty || b.touched)\\\">\\r\\n                  <p *ngIf=\\\"b.errors.required\\\">Option is required</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-12 col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"c\\\">Option c.</label>\\r\\n                <span style=\\\"color:red;\\\" [hidden]=\\\"!(c?.invalid)\\\">*</span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"c\\\" placeholder=\\\"Enter Third Option\\\" [(ngModel)]=\\\"questionObj.c\\\" [ngClass]=\\\"{\\r\\n                                'is-invalid': c?.invalid && (c?.dirty ||c?.touched),\\r\\n                                'is-valid': c?.valid && (c?.dirty || c?.touched)\\r\\n                           }\\\" #c=\\\"ngModel\\\" required>\\r\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"c.errors && (c.dirty || c.touched)\\\">\\r\\n                  <p *ngIf=\\\"c.errors.required\\\">Option is required</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-12 col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"b\\\">Option d.</label>\\r\\n                <span style=\\\"color:red;\\\" [hidden]=\\\"!(d?.invalid)\\\">*</span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"d\\\" placeholder=\\\"Enter fourth Option\\\" [(ngModel)]=\\\"questionObj.d\\\" [ngClass]=\\\"{\\r\\n                            'is-invalid': d?.invalid && (d?.dirty ||d?.touched),\\r\\n                            'is-valid': d?.valid && (d?.dirty || d?.touched)\\r\\n                       }\\\" #d=\\\"ngModel\\\" required>\\r\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"d.errors && (d.dirty || d.touched)\\\">\\r\\n                  <p *ngIf=\\\"d.errors.required\\\">Option is required</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-md-12 label-font\\\">Choose Correct Answer Option\\r\\n              <span style=\\\"color:red;\\\" [hidden]=\\\"!(answer?.invalid)\\\">*</span>\\r\\n            </label>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"form-check form-check-inline mr-2\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"a\\\" [(ngModel)]=\\\"questionObj.answer\\\" #answer=\\\"ngModel\\\" required>\\r\\n                <label class=\\\"form-check-label\\\">a.</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check form-check-inline mr-2\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"b\\\" [(ngModel)]=\\\"questionObj.answer\\\" #answer=\\\"ngModel\\\" required>\\r\\n                <label class=\\\"form-check-label\\\">b.</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check form-check-inline mr-2\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"c\\\" [(ngModel)]=\\\"questionObj.answer\\\" #answer=\\\"ngModel\\\" required>\\r\\n                <label class=\\\"form-check-label\\\">c.</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check form-check-inline mr-2\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"d\\\" [(ngModel)]=\\\"questionObj.answer\\\" #answer=\\\"ngModel\\\" required>\\r\\n                <label class=\\\"form-check-label\\\">d.</label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        <span>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitAddQuestion()\\\" [disabled]=\\\"questionForm.invalid\\\" [class.cursor-restriction]=\\\"questionForm.invalid\\\"\\r\\n            style=\\\"margin-right: 17px;\\\">ADD Question</button>\\r\\n        </span>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"addQuestionModal.hide()\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\\r\\n<div bsModal #answerModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\" style=\\\"color: #196f77;\\\">\\r\\n        <div *ngFor=\\\"let ques of allQuestions\\\" [style.color]=\\\"!ques.selected? '#ffc107' : ques.selected == ques.answer ? 'green': 'red'\\\">\\r\\n          <div>{{ques.question}}</div>\\r\\n          <div>Your Answer: {{ques[ques.selected]}}</div>\\r\\n          <div>Right Answer: {{ques.answer}}) {{ques[ques.answer]}}</div>\\r\\n          <hr>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"answerModal.hide()\\\" style=\\\"margin-left: 17px;\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ModalDirective } from '../../node_modules/ngx-bootstrap';\r\nimport { QuestionClass } from './question-class';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\tisQuestionCardShow: boolean = false;\r\n\ttotalAnswered: number = 0;\r\n\trightAnswer: number;\r\n\tquestionObj = new QuestionClass();\r\n\t@ViewChild('submitModal') submitModal: ModalDirective;\r\n\t@ViewChild('addQuestionModal') addQuestionModal : ModalDirective;\r\n\t@ViewChild('answerModal') answerModal : ModalDirective;\r\n\t@ViewChild('questionForm') questionForm: any;\r\n\t@ViewChild('questionTest') questionTest : any;\r\n\r\n\tconstructor( private toastr: ToastrService) { }\r\n\r\n\tanswerArray = [];\r\n\r\n\tallQuestions: any = [{\r\n\t\t\"id\": 1,\r\n\t\t\"question\": \" What is the mode of payment on EMI Store?\",\r\n\t\t\"a\": \"Cash on delivery\",\r\n\t\t\"b\": \"Debit / Credit Card\",\r\n\t\t\"c\": \"Bajaj Finserv EMI Network Card\",\r\n\t\t\"d\": \"Gift Vouchers\",\r\n\t\t\"e\": \"all of the above\",\r\n\t\t\"answer\": \"c\"\r\n\t},\r\n\t{\r\n\t\t\"id\": 2,\r\n\t\t\"question\": \"United Nation (UN) day is celebrated on\",\r\n\t\t\"a\": \"24th August\",\r\n\t\t\"b\": \"24th October\",\r\n\t\t\"c\": \"23th september\",\r\n\t\t\"d\": \"23th August\",\r\n\t\t\"e\": \"None Of The Above \",\r\n\t\t\"answer\": \"b\"\r\n\t},\r\n\t{\r\n\t\t\"id\": 3,\r\n\t\t\"question\": \"Largest island in the world is?\",\r\n\t\t\"a\": \"New Guinea\",\r\n\t\t\"b\": \"Green Land\",\r\n\t\t\"c\": \"Sumatra\",\r\n\t\t\"d\": \"Indonesia\",\r\n\t\t\"e\": \"None Of The Above \",\r\n\t\t\"answer\": \"b\"\r\n\t},\r\n\t{\r\n\t\t\"id\": 4,\r\n\t\t\"question\": \"First Indian to take hat-trick in Test cricket is?\",\r\n\t\t\"a\": \" Chetan Sharma\",\r\n\t\t\"b\": \"Kapil Dev\",\r\n\t\t\"c\": \"Harbhajan Singh\",\r\n\t\t\"d\": \"Irfan Pathan\",\r\n\t\t\"e\": \"None Of The Above \",\r\n\t\t\"answer\": \"a\"\r\n\t},\r\n\t{\r\n\t\t\"id\": 5,\r\n\t\t\"question\": \"Name the COVID vaccine candidate manufactured by Bharat Biotech that has been approved by the Drug Controller General of India (DGCI)?\",\r\n\t\t\"a\": \"CoViD Shield\",\r\n\t\t\"b\": \"COVID Shield\",\r\n\t\t\"c\": \"Covaxin\",\r\n\t\t\"d\": \"Apna Vaccine\",\r\n\t\t\"e\": \"None Of The Above \",\r\n\t\t\"answer\": \"c\"\r\n\t}\r\n\t];\r\n\r\n\t/**Method call on submit the test */\r\n\tsubmitTest() {\r\n\t\tthis.rightAnswer = 0;\r\n\t\tthis.totalAnswered = 0;\r\n\t\tfor (let i = 0; i < this.allQuestions.length; i++) {\r\n\t\t\tif (\"selected\" in this.allQuestions[i] && (this.allQuestions[i][\"selected\"] != null)) {\r\n\t\t\t\tthis.totalAnswered++;\r\n\t\t\t\tif (this.allQuestions[i][\"selected\"] == this.allQuestions[i][\"answer\"]) {\r\n\t\t\t\t\tthis.rightAnswer++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tthis.submitModal.show();\r\n\r\n\t}\r\n\r\n\tstartQuiz() {\r\n\t\tfor (let i = 0; i < this.allQuestions.length; i++) {\r\n\t\t\tif (\"selected\" in this.allQuestions[i]) {\r\n\t\t\t\tdelete this.allQuestions[i][\"selected\"];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tthis.questionTest.reset();\r\n\t\tthis.isQuestionCardShow = true;\r\n\r\n\t}\r\n\tHomePage() {\r\n\t\tthis.isQuestionCardShow = false;\r\n\t}\r\n\taddQuestion(){\r\n\t\tthis.addQuestionModal.show();\r\n\t}\r\n\tsubmitAddQuestion(){\r\n\t\tlet quesTemp = JSON.parse(JSON.stringify(this.questionObj));\r\n\t\tquesTemp[\"id\"] = this.allQuestions.length+1;\r\n\t\tthis.allQuestions.push(quesTemp);\r\n\t\tthis.questionForm.reset();\r\n\t\tthis.toastr.success(\"Question Added Successfully!!\");\r\n\t\tthis.addQuestionModal.hide();\r\n\r\n\t}\r\n\tcheckAnswers(){\r\n\t\tthis.submitModal.hide();\r\n\t\tthis.answerModal.show();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\r\n\r\n\t}\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AccordionModule } from 'ngx-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    ModalModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n  AccordionModule.forRoot(),\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class QuestionClass {\r\n    \"id\" ?: number;\r\n    \"question\": string;\r\n    \"a\": string;\r\n    \"b\": string;\r\n    \"c\": string;\r\n    \"d\": string;\r\n    \"e\": string;\r\n    \r\n    \"answer\": string;\r\n    \"selected\" ?: string;\r\n\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}